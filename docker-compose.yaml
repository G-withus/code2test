services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      args:
        NGINX_PORT: 80
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - testmdt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  portregistration:
    build:
      context: ./Portregistration
      dockerfile: Dockerfile
      args:
        NGINX_PORT: 81
    ports:
      - "81:81"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - testmdt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "14000-14010:14000-14010/udp"
      - "15000-15010:15000-15010/udp"
    depends_on:
      mysqldb:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/manage_port?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=appuser
      - SPRING_DATASOURCE_PASSWORD=securepassword
    networks:
      - testmdt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysqldb:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=manage_port
    volumes:
      - mysqldb-data:/var/lib/mysql
    # Remove external port exposure in production
    networks:
      - testmdt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "appuser", "-psecurepassword"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysqldb-data:

networks:
  testmdt-network:
    driver: bridge